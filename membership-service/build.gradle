plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.palantir.docker' version '0.36.0'
}

group = 'com.yujapay.membership'
version = '1.0.4'

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    testImplementation 'com.tngtech.archunit:archunit:1.0.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // implementation group: 'jakarta.persistence', name: 'jakarta-persistence-api', version: '2.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.jetbrains:annotations:23.0.0'
    testImplementation 'junit:junit:4.13.1'
    implementation project(path: ':common')

//    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

}

tasks.named('test') {
    useJUnitPlatform()
}

docker {
    println(tasks.bootJar.outputs.files)
    // 이미지 이름
   name 'yujapay-'+project.name + ":" + version
    // 어떤 Dockerfile
    dockerfile file('../Dockerfile')
    // 어떤 파일들을 Dockerfile에 복사할 것인가
    files tasks.bootJar.outputs.files
    // Dockerfile 에 전달할 인자
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}